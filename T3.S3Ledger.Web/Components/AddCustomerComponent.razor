@page "/addcustomercomponent"
@using static T3.S3Ledger.Web.Enums
@inject HttpClient Http
@inject NavigationManager navigation

<style>
    form .row {
        margin-bottom: 16px;
    }
</style>

@if (customer == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <RadzenTemplateForm Data="@customer" Submit="@((CustomerModel args) => { Submit(args).ConfigureAwait(true); })">
        <div class="row">
            <div class="col-md-6">
                <RadzenFieldset Text="Customer Detail">
                    <div class="row">
                        <div class="align-items-center d-flex col-md-4">
                            <RadzenLabel Text="Customer Type" />
                        </div>
                        <div class="col-md-8">
                            <RadzenDropDown @bind-Value="customer.CustomerType" Placeholder="Select..." Data="@(Enum.GetValues(typeof(CustomerType)).Cast<CustomerType>().Select(t => new { Text = t, Value = t }))" style="width: 100%;" TextProperty="Text" ValueProperty="Value" Name="CustomerType">
                            </RadzenDropDown>
                        </div>
                    </div>
                    <div class="row">
                        <div class="align-items-center d-flex col-md-4">
                            <RadzenLabel Text="Customer Name" />
                        </div>
                        <div class="col-md-8">
                            <RadzenTextBox @bind-Value="customer.CustomerName" Disabled="false" Placeholder="Customer Name" style="width: 100%;" Name="CustomerName" />
                        </div>
                    </div>
                </RadzenFieldset>
            </div>
        </div>
        <div class="row justify-content-center">
            <div class="col-md-12 d-flex align-items-end justify-content-center" style="margin-top: 16px;">
                <RadzenButton ButtonType="ButtonType.Submit" Icon="save" Text="Save" />
                <RadzenButton ButtonStyle="ButtonStyle.Light" Icon="cancel" style="display: inline-block; margin-left: 10px;" Text="Cancel" Click="@Cancel" />
            </div>
        </div>
    </RadzenTemplateForm>
}

@code {
    private CustomerModel customer = new CustomerModel()
    {
        CreatedDate = DateTime.Today.Date,
        OrganizationId = 1

    };

    private AddressModel address = new AddressModel();


    private IEnumerable<CountryModel> countries = new List<CountryModel>()
{
        new CountryModel() { Id = 200, Name = "Sri Lanka" }
    };


    private async Task Submit(CustomerModel arg)
    {
        address.CountryId = 200;

        await Http.PostAsJsonAsync<CustomerModel>("/api/customer", arg);
        navigation.NavigateTo("/customercomponent");
    }

    void Cancel()
    {
        navigation.NavigateTo("/customercomponent");
    }
}
